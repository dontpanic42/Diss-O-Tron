package Settings;

import org.ini4j.Wini;

import java.io.File;
import java.io.IOException;

/**
 * Created by daniel on 20.04.14.
 */
public class SettingsStore {
    public static final String SETTINGS_FILENAME = "userprefs.ini";
    public static final String OUTPUT_SECTION = "output";
    public static final String INPUT_SECTION = "input";

    private static SettingsStore ourInstance = new SettingsStore();

    private Wini ini;
    private File file;

    public static SettingsStore getInstance() {
        return ourInstance;
    }

    private SettingsStore() {
        file = new File(SETTINGS_FILENAME);
        try
        {
            if(file.exists())
            {
                ini = new Wini(file);
            }
            else
            {
                ini = new Wini();
                ini.putComment("About", "Autogenerated user preferences file.");
                ini.putComment("Reset", "Delete this file to reset settings.");
            }
        }
        catch (IOException e)
        {
            e.printStackTrace();
        }
    }

    private <T> T getValue(String section, String key, Class<T> clazz, T deflt)
    {
        try
        {
            T v = ini.get(section, key, clazz);
            return v;
        }
        catch(Exception e)
        {
            return deflt;
        }
    }

    public void load(InputSettings inp)
    {
        Integer mc = ini.get(INPUT_SECTION, "maxClasses", Integer.class);
        inp.maxClasses = (mc == null)? inp.maxClasses : mc;

        String ifl = ini.get(INPUT_SECTION, "ontFilename", String.class);
        inp.ontFilename = (ifl == null)? inp.ontFilename : ifl;

        String iff = ini.get(INPUT_SECTION, "ontFiletype", String.class);
        inp.ontFiletype = (iff == null)? inp.ontFiletype : iff;

        Integer ifs = ini.get(INPUT_SECTION, "ontFiletypeIndex", Integer.class);
        inp.ontFiletypeIndex = (ifs == null)? inp.ontFiletypeIndex : ifs;
    }

    public void load(OutputSettings out)
    {
        String of = ini.get(OUTPUT_SECTION, "outFilename", String.class);
        out.filename = (of == null)? out.filename : of;

        String hs = ini.get(OUTPUT_SECTION, "headerStyle", String.class);
        out.headerStyle = (hs == null)? out.headerStyle : hs;
        Integer hsi = ini.get(OUTPUT_SECTION, "headerStyleIndex", Integer.class);
        out.headerStyleIndex = (hsi == null)? out.headerStyleIndex : hsi;

        String rs = ini.get(OUTPUT_SECTION, "rowHeaderStyle", String.class);
        out.rowHeaderStyle = (rs == null)? out.rowHeaderStyle : rs;
        Integer rsi = ini.get(OUTPUT_SECTION, "rowHeaderStyleIndex", Integer.class);
        out.rowHeaderStyleIndex = (rsi == null)? out.rowHeaderStyleIndex : rsi;
    }

    public void persist(InputSettings inp)
    {
        ini.put(INPUT_SECTION, "maxClasses", inp.maxClasses);
        ini.put(INPUT_SECTION, "ontFilename", inp.ontFilename);
        ini.put(INPUT_SECTION, "ontFiletype", inp.ontFiletype);
        ini.put(INPUT_SECTION, "ontFiletypeIndex", inp.ontFiletypeIndex);

        saveToFile();
    }

    public void persist(OutputSettings out)
    {
        ini.put(OUTPUT_SECTION, "outFilename", out.filename);
        ini.put(OUTPUT_SECTION, "headerStyle", out.headerStyle);
        ini.put(OUTPUT_SECTION, "headerStyleIndex", out.headerStyleIndex);
        ini.put(OUTPUT_SECTION, "rowHeaderStyle", out.rowHeaderStyle);
        ini.put(OUTPUT_SECTION, "rowHeaderStyleIndex", out.rowHeaderStyleIndex);

        saveToFile();
    }

    private void saveToFile()
    {
        try
        {
            ini.store(file);
        }
        catch (IOException e)
        {
            e.printStackTrace();
        }
    }
}
